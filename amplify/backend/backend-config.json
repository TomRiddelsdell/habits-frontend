{
  "api": {
    "habits": {
      "dependsOn": [
        {
          "attributes": [
            "UserPoolId"
          ],
          "category": "auth",
          "resourceName": "habits"
        }
      ],
      "output": {
        "authConfig": {
          "additionalAuthenticationProviders": [
            {
              "apiKeyConfig": {
                "apiKeyExpirationDate": "2024-12-04T08:27:45.491Z",
                "apiKeyExpirationDays": 365,
                "description": "frontend api key"
              },
              "authenticationType": "API_KEY"
            },
            {
              "authenticationType": "AWS_IAM"
            },
            {
              "authenticationType": "OPENID_CONNECT",
              "openIDConnectConfig": {
                "authTTL": "1",
                "clientId": "",
                "iatTTL": "1",
                "issuerUrl": "https://I+Shouldnt+have+selected+this/",
                "name": "OpenIdConnectProviderName"
              }
            },
            {
              "authenticationType": "AWS_LAMBDA",
              "lambdaAuthorizerConfig": {
                "lambdaFunction": "graphQlLambdaAuthorizer86bdc800",
                "ttlSeconds": "300"
              }
            }
          ],
          "defaultAuthentication": {
            "authenticationType": "AMAZON_COGNITO_USER_POOLS",
            "userPoolConfig": {
              "userPoolId": "authhabits"
            }
          }
        }
      },
      "providerPlugin": "awscloudformation",
      "service": "AppSync"
    }
  },
  "auth": {
    "habits": {
      "customAuth": false,
      "dependsOn": [],
      "frontendAuthConfig": {
        "mfaConfiguration": "OFF",
        "mfaTypes": [
          "SMS"
        ],
        "passwordProtectionSettings": {
          "passwordPolicyCharacters": [
            "REQUIRES_LOWERCASE",
            "REQUIRES_NUMBERS",
            "REQUIRES_SYMBOLS",
            "REQUIRES_UPPERCASE"
          ],
          "passwordPolicyMinLength": 8
        },
        "signupAttributes": [
          "EMAIL",
          "NAME"
        ],
        "socialProviders": [],
        "usernameAttributes": [
          "EMAIL"
        ],
        "verificationMechanisms": [
          "EMAIL"
        ]
      },
      "providerPlugin": "awscloudformation",
      "service": "Cognito"
    }
  },
  "function": {
    "graphQlLambdaAuthorizer86bdc800": {
      "build": true,
      "providerPlugin": "awscloudformation",
      "service": "Lambda"
    }
  }
}